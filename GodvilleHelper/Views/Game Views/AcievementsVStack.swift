import SwiftUI

struct AcievementsVStack: View {
    @ObservedObject var heroHandler: GodvilleDataHandler
    
    var body: some View {
        VStack(spacing: 0) {
            if let hero = heroHandler.instance {
                Spacer()
                    .frame(height: 10)
                HStack {
                    Text("–£—Å–ø–µ—Ö–∏")
                        .font(.headline)
                        .fontWeight(.bold)
                        .multilineTextAlignment(.leading)
                    Spacer()
                }
                .padding([.horizontal])
                .padding(.bottom, 5)
                .cornerRadius(10)
                
                if let won = hero.arena_won, let lost = hero.arena_lost {
                    TextHStack(title: "üëä –ê—Ä–µ–Ω–∞: ", description: "\(won)/\(lost)")
                        .frame(height: 25, alignment: .leading)
                        .padding(.horizontal)
                }
                
                if let bricksCnt = hero.bricks_cnt {
                    if let templeCompleted = heroHandler.templeCompletedDate {
                        TextHStack(title: "üïç –•—Ä–∞–º –ø–æ—Å—Ç—Ä–æ–µ–Ω: ", description: templeCompleted)
                            .frame(height: 25, alignment: .leading)
                            .padding(.horizontal)
                    } else {
                        ProgressHStack(title: "üïç –°–æ–±—Ä–∞–Ω–æ –∫–∏—Ä–ø–∏—á–µ–π: ",
                                       description: "\(String(bricksCnt))/1000",
                                       progress: (CGFloat(bricksCnt) / 1000),
                                       backgroundColor: .blue,
                                       foregroundColor: .blue)
                            .frame(height: 25, alignment: .leading)
                            .padding(.horizontal)
                        
                    }
                    
                }
                
                if let woodCnt = hero.wood_cnt {
                    if let arkCompleted = heroHandler.arkCompletedDate {
                        TextHStack(title: "üö¢ –ö–æ–≤—á–µ–≥ –ø–æ—Å—Ç—Ä–æ–µ–Ω: ", description: arkCompleted)
                            .frame(height: 25, alignment: .leading)
                            .padding(.horizontal)
                    } else {
                        ProgressHStack(title: "üö¢ –°–æ–±—Ä–∞–Ω–æ –¥–æ—Å–æ–∫: ",
                                       description: "\(String(woodCnt))/1000",
                                       progress: (CGFloat(woodCnt) / 1000),
                                       backgroundColor: .blue,
                                       foregroundColor: .blue)
                            .frame(height: 25, alignment: .leading)
                            .padding(.horizontal)
                    }
                }
                
                if let savings = heroHandler.savings {
                    if let arkCompleted = heroHandler.savingsCompletedDate {
                        TextHStack(title: "üè¶ –ü–µ–Ω—Å–∏—è —Å–∫–æ–ø–ª–µ–Ω–∞: ", description: arkCompleted)
                            .frame(height: 25, alignment: .leading)
                            .padding(.horizontal)
                    } else {
                        ProgressHStack(title: "üè¶ –°–∫–æ–ø–ª–µ–Ω–æ –Ω–∞ –ø–µ–Ω—Å–∏—é: ",
                                       description: "\(String(savings))k/30000k",
                                       progress: (CGFloat(savings) / 30000),
                                       backgroundColor: .blue,
                                       foregroundColor: .blue)
                            .frame(height: 25, alignment: .leading)
                            .padding(.horizontal)
                    }
                }
                
                if let arkM = hero.ark_m, let arkF = hero.ark_f {
                    if arkM >= 1000 && arkF >= 1000 {
                        TextHStack(title: "üêÆ –¢–≤–∞—Ä–∏ —Å–æ–±—Ä–∞–Ω—ã! ", description: "")
                            .frame(height: 25, alignment: .leading)
                            .padding(.horizontal)
                    } else {
                        ProgressHStack(title: "üêÆ –°–æ–±—Ä–∞–Ω–æ —Ç–≤–∞—Ä–µ–π: ",
                                       description: "\(String(arkM)) + \(String(arkF))",
                                       progress: (CGFloat(arkM + arkF) / 2000),
                                       backgroundColor: .blue,
                                       foregroundColor: .blue)
                            .frame(height: 25, alignment: .leading)
                            .padding(.horizontal)
                    }
                }
                
                if let shop = hero.shop_name, let shopLevel = hero.t_level {
                    TextHStack(title: "üõí –õ–∞–≤–∫–∞: ", description: "\(shop) (\(shopLevel) —É—Ä.)")
                        .frame(height: 25, alignment: .leading)
                        .padding(.horizontal)
                    
                }
                
                if let wordsCount = hero.words {
                    ProgressHStack(title: "üìñ –°–æ–±—Ä–∞–Ω–æ —Å–ª–æ–≤: ",
                                   description: "\(String(wordsCount))/1000",
                                   progress: (CGFloat(wordsCount) / 1000),
                                   backgroundColor: .blue,
                                   foregroundColor: .blue)
                        .frame(height: 25, alignment: .leading)
                        .padding(.horizontal)
                }
                
                Spacer()
                    .frame(height: 10)
            }
        }
    }
}
